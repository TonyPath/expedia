<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;
use DoctrineExtensions\Query\Mysql\Field;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRepository extends EntityRepository
{
	public function helloWorld(){
		
		$em = $this->_em;
		
		$qb = $em->createQueryBuilder();
		$qb->select("h");
		$qb->from("Entities\Hotel", "h");
		//$qb->setFirstResult( 0 );
		//$qb->setMaxResults( 1 );
		$qb->where('h.id = :identifier');
		
		$qb->setParameter('identifier', 185895);
		
		$result = $qb->setMaxResults(1)->getQuery();
		
		return $result->getResult()[0];
	}
	
	public function getHotels($regionIDList = null, $lang = "ElGr"){

		$em = $this->_em;

		$qb = $em->createQueryBuilder();

		
		$qb->select("Hotel as hotel");
			
		if ($lang){
			$qb->addSelect("COALESCE(HotelLang.name, Hotel.name) AS name");
			$qb->addSelect("COALESCE(HotelLang.location, Hotel.location) AS location");
		}
		
		
		$qb->addSelect("Field(Hotel.supplierType, 'ESR','EEM','GDS') as HIDDEN supplier");
		
		$qb->from("Entities\Hotel", "Hotel");
		
		
		if ($lang){
			$qb->leftJoin(
				"Entities\Hotel{$lang}", "HotelLang", 
				\Doctrine\ORM\Query\Expr\Join::WITH,
				"HotelLang.id = Hotel.id"
			);
		}
		
		$qb->innerJoin(
			"Entities\RegionHotelMapping", "HotelRegionMapping",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"HotelRegionMapping.hotel = Hotel"
		);
		
		$qb->andWhere("HotelRegionMapping.regionID in (:regions)");
		$qb->setParameter('regions', $regionIDList);
		
		if(true){
			//$qb->add("orderBy","FIELD(hotel.supplierType,ESR,EEM,GDS)");
			$qb->addOrderBy('supplier');
			//$qb->addOrderBy('Hotel.confidence', 'DESC');
			//$qb->addOrderBy('Hotel.highRate', 'ASC');
			//$qb->addOrderBy('Hotel.starRating', 'DESC');
		}
		
		
		
		//print_r($qb->getQuery()->getAST());
		/*
		$results = $qb
				->setMaxResults(10)
				->setFirstResult(0)
				->getQuery()
				->getResult();
				*/
		
		//echo $qb->getQuery()->getSQL();
		
		$paginator = new \Doctrine\ORM\Tools\Pagination\Paginator($qb->getQuery(), $fetchJoinCollection = true);
		$pageSize = 50;
		$totalItems = count($paginator);
		$pagesCount = ceil($totalItems / $pageSize);
		
		$results = $paginator->getQuery()
					->setFirstResult($pageSize * 0)
					->setMaxResults($pageSize)
					->getResult();
		
		
		
		return $results;
		//return $result->getResult();
	}
	
	/*
	public function getHotelAmenities(){
		
		$em = $this->_em;
		
		$qb = $em->createQueryBuilder();
		
		$qb->select(array(
			"COALESCE(AttributeLang.description, Attribute.description) as description", 
			"COALESCE(HotelAttributeMappingElGr.appendTxt, HotelAttributeMapping.appendTxt) as value"
		));
		$qb->from("Entities\HotelAttribute", "Attribute");

		$qb->leftJoin(
			"Entities\HotelAttributeElGr", "AttributeLang",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"AttributeLang.id = Attribute.id"
		);
		
		$qb->innerJoin(
			"Entities\AttributeHotelMapping", "HotelAttributeMapping",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"HotelAttributeMapping.attribute = Attribute"
		);
		
		$qb->leftJoin(
			"Entities\AttributeHotelMappingElGr", "HotelAttributeMappingElGr",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			$qb->expr()->andX(
            	$qb->expr()->eq('HotelAttributeMappingElGr.attributeID', 'Attribute.id'),
                $qb->expr()->eq('HotelAttributeMappingElGr.eanHotelID', 'HotelAttributeMapping.eanHotelID')
            )
		);
		
		$qb->innerJoin(
			"Entities\Hotel", "Hotel",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"Hotel.id = HotelAttributeMapping.eanHotelID"
		);
		
		$qb->andWhere("Hotel.id = :hotelID");
		$qb->setParameter('hotelID', 182141);
		
		$result = $qb->setMaxResults(200)->getQuery();
		
		return $result->getResult();
	}
	*/
	/**/
	
	public function getAmenitiesForHotel($hotelID, $type = "", $subType = "", $lang = "ElGr"){

		$attributes = "Entities\HotelAttribute{$lang}";
		$attributesLink = "Entities\AttributeHotelMapping{$lang}";
		
		$em = $this->_em;

		$qb = $em->createQueryBuilder();
	
		
		if ($lang) {
			$qb->addSelect("AttributeLang.description");
			$qb->addSelect("AttributeLinkLang.appendTxt");
			
		} else {
			$qb->addSelect("Attribute.description");
			$qb->addSelect("AttributeLink.appendTxt");
		}

		$qb->addSelect("Attribute.type");
		$qb->addSelect("Attribute.subType");
		
			
		$qb->from("Entities\HotelAttribute", "Attribute");

		if ($lang) {

			$qb->leftJoin(
				"Entities\HotelAttribute{$lang}", "AttributeLang",
				\Doctrine\ORM\Query\Expr\Join::WITH,
				"AttributeLang.id = Attribute.id"
			);
		}
		
		if ($lang) {
			$qb->innerJoin(
				"Entities\AttributeHotelMapping{$lang}", "AttributeLinkLang",
				\Doctrine\ORM\Query\Expr\Join::WITH,
				"AttributeLinkLang.attributeID = AttributeLang.id"
			);
		} else {
			$qb->innerJoin(
				"Entities\AttributeHotelMapping", "AttributeLink",
				\Doctrine\ORM\Query\Expr\Join::WITH,
				"AttributeLink.attributeID = Attribute.id"
			);
		}
		
		$attributeLink = "AttributeLink";
		if ($lang){
			$attributeLink = "AttributeLinkLang";
		}
		
		$qb->innerJoin(
			"Entities\Hotel", "Hotel",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"Hotel.id = {$attributeLink}.eanHotelID"
		);

		$qb->andWhere("Hotel.id = :hotelID");
		$qb->setParameter('hotelID', $hotelID);
		
		if ($type){
			$qb->andWhere("Attribute.type = :type");
			$qb->setParameter('type', $type);
		}
		
		if ($subType){
			$qb->andWhere("Attribute.subType = :subType");
			$qb->setParameter('subType', $subType);
		}
		

		$result = $qb->getQuery();
		
		return $result->getResult();
	}
	
	public function getPointsOfInterestsForHotel($hotelID, $lang = "ElGr"){

		$em = $this->_em;

		$qb = $em->createQueryBuilder();

		if ($lang){
			$region = "RegionLang";
		}
		else {
			$region = "Region";
		}
		
		$qb->select("{$region}.name, 
					{$region}.nameLong, 
					PointOfInterest.latitude, 
					PointOfInterest.longitude");

		$qb->from("Entities\Region", "Region");

		if ($lang){
			$qb->innerJoin(
				"Entities\Region{$lang}", "RegionLang",
				\Doctrine\ORM\Query\Expr\Join::WITH,
				"RegionLang.id = Region.id"
			);
		}

		$qb->innerJoin(
			"Entities\PointOfInterest", "PointOfInterest",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"PointOfInterest.id = Region.id"
		);

		$qb->innerJoin(
			"Entities\Hotel", "Hotel",
			\Doctrine\ORM\Query\Expr\Join::WITH,
			"Hotel.regionID = Region.parentID"
		);

		$qb->andWhere("Hotel.id = :hotelID");

		$qb->setParameter('hotelID', $hotelID);

		$result = $qb->getQuery();

		return $result->getResult();
	}
}
